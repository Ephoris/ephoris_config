#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.

use strict;
use warnings;
use utf8;

my $status;
my $percent;
my $full_text;
my $short_text;
my $label;
my @str;

open (PERCENT, "upower -i `upower -e | grep 'BAT'` | grep 'percentage' |") or die;
$percent = <PERCENT>;
close(PERCENT);

if (not defined($percent)) {
    exit(0)
}

open (STATUS, "upower -i `upower -e | grep 'BAT'` | grep 'state' |") or die;
$status = <STATUS>;
close(STATUS);

if (not defined($status)) {
    exit(0)
}

$percent =~ /\s+[\w:]+\s+(\d+)%/;
$percent = $1;
# $percent = $str[-1];
@str = split /\s+/, $status;
$status = $str[-1];

if ($percent < 25) {
    $label = ' ';
} elsif ($percent < 50) {
    $label = ' ';
} elsif ($percent < 75) {
    $label = ' ';
} else {
    $label = ' ';
}

$full_text = "$label$percent%";

if ($status eq 'discharging') {
	$full_text .= '';
} elsif ($status eq 'charging') {
	$full_text .= ' ';
} elsif ($status eq 'Unknown') {
    $full_text .= ' ?';
}

$short_text = $full_text;

# print text
print "$full_text\n";
print "$short_text\n";

if ($status eq 'Discharging') {

	if ($percent < 20) {
		print "#cc241d\n";
	} elsif ($percent < 50) {
		print "#fabd2f\n";
	} else {
		print "#b8bb26\n";
	}

	if ($percent < 5) {
		exit(33);
	}
} elsif ($status eq 'Charging') {
    print "#b8bb26\n";
} else {
    print "#b8bb26\n";
}

exit(0);

